.cell.is-flex.lane(id='status' + status.id)
    section.card.is-flex.is-flex-grow-1.is-flex-direction-column
        header.card-header
            h1.card-header-title= status.description
        .card-content.is-flex-grow-1.status(
            data-status= status.id
            @dragover.prevent
            @drop= `e => {
              const taskId = e.dataTransfer.getData('text/plain')
              const taskEl = document.getElementById(taskId)
              $el.appendChild(taskEl)
              $dispatch('update-status', {taskEl, lane: $el})
            }`)
          each task in tasks
              if task.status_id == status.id
                  include ./task-card
        .card-footer(x-data='{mode:0}')
            button.button.card-footer-item.m-1(
                x-show="mode==0"
                @click="mode++")
                span.icon
                    ion-icon(name='add-outline')
            form.card-footer-item(
                x-show="mode==1"
                hx-swap="outerHTML"
                hx-target="#status"+status.id
                hx-post="task"
                @click.outside="mode=0")
                input(type="hidden", name="status", value=status.id)
                .field.has-addons
                    .control
                        input.input(
                            type="text"
                            name="description"
                            placeholder="Describe new task")
                    .control
                        button.button.is-info(type="submit")
                            span.icon
                                ion-icon(name="save-outline")

