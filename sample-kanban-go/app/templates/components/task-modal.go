package components

import (
	"fmt"
	g "github.com/maragudk/gomponents"
	. "github.com/maragudk/gomponents/html"
	"github.com/sombriks/sample-testcontainers/sample-kanban-go/app/models"
)

func TaskModal(user *models.Person, status *models.Status, task *models.Task) g.Node {
	return Div(ID(fmt.Sprint("task-modal-", task.Id)),
		Class("modal"),
		g.Attr(":class", "openModal && 'is-active'"),
		Div(Class("modal-background")),
		Button(Class("modal-close is-large"),
			Aria("label", "close"),
			g.Attr("@click", "e => openModal=false"),
		),
		Div(Class("modal-content is-overflow-hidden"),
			Div(Class("columns"),
				Div(Class("column is-two-thirds"),
					H1(g.Text(fmt.Sprint("Task #", task.Id))),
					Div(Class("field is-grouped is-grouped-right"),
						Div(Class("control"),
							Button(Class("button is-danger"),
								g.Attr("hx-swap", "outerHTML"),
								g.Attr("hx-confirm", "Are you sure?"),
								g.Attr("hx-target", fmt.Sprint("#status", task.StatusId)),
								g.Attr("hx-delete", fmt.Sprint("task/", task.Id)),
								Span(Class("icon"), g.El("ion-icon", Name("trash-outline"))),
							),
						),
					),
					Form(Class("form"),
						g.Attr("hx-swap", "outerHTML"),
						g.Attr("hx-target", fmt.Sprint("#task", task.Id)),
						g.Attr("hx-put", fmt.Sprint("task/", task.Id)),
						Input(Type("hidden"), Name("task"),
							Value(fmt.Sprint(task.Id)),
						),
						Input(Type("hidden"), Name("status"),
							g.Attr("x-ref", fmt.Sprint("form-status-", task.Id)),
							Value(fmt.Sprint(task.StatusId)),
						),
						Div(Class("field"),
							Label(Class("label"),
								For(fmt.Sprint("task-description-", task.Id)),
								g.Text("Task Description"),
							),
							Div(Class("control"),
								Input(Class("input"),
									Placeholder("Task description"),
									Name("description"),
									Type("text"),
									Required(),
									ID(fmt.Sprint("task-description-", task.Id)),
									Value(task.Description),
								),
							),
						),
						Div(Class("field is-grouped is-grouped-right"),
							Div(Class("control"),
								Button(Class("button is-primary"),
									Type("submit"),
									Span(Class("icon"), g.El("ion-icon", Name("save-outline"))),
								),
							),
						),
					),
				),
				Div(Class("column"),
					TaskMembers(user, task),
					Hr(),
					TaskComments(user, task),
				),
			),
		),
	)
}
